name: CI
on:
  push:
    branches: [main]
    tags: ["**"]
  pull_request:
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        version: ['1.6']
        os: [ubuntu-latest]
        arch: [x64]
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v2
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-${{ matrix.arch }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.arch }}-test-
            ${{ runner.os }}-${{ matrix.arch }}-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        with:
          depwarn: error
      - name: "scripts project setup"
        run: julia --project=$GITHUB_WORKSPACE/scripts -e 'import Pkg; Pkg.instantiate()'
      - name: "solve_qp.jl test"
        run: julia --project=$GITHUB_WORKSPACE/scripts $GITHUB_WORKSPACE/scripts/solve_qp.jl --instance_path test/trivial_lp_model.mps --method pdhg --output_dir /tmp/pdhg
      - name: "solve_lp_external.jl test (SCS)"
        run: julia --project=$GITHUB_WORKSPACE/scripts $GITHUB_WORKSPACE/scripts/solve_lp_external.jl --instance_path test/trivial_lp_model.mps --solver scs-indirect --tolerance 1e-7 --output_dir /tmp/scs
      - name: "solve_lp_external.jl test (HiGHS)"
        run: julia --project=$GITHUB_WORKSPACE/scripts $GITHUB_WORKSPACE/scripts/solve_lp_external.jl --instance_path test/trivial_lp_model.mps --solver highs-ipm --tolerance 1e-7 --output_dir /tmp/highs
      - name: "process_json_to_csv"
        run: |
          echo '{"datasets": [' >/tmp/layout.json
          echo '{"name": "pdhg", "logs_directory": "/tmp/pdhg"},' >> /tmp/layout.json
          echo '{"name": "scs", "logs_directory": "/tmp/scs"}]}' >>/tmp/layout.json
          julia --project=benchmarking benchmarking/process_json_to_csv.jl \
            /tmp/layout.json /tmp/dataset.csv
          if [[ $(wc -l </tmp/dataset.csv) != 3 ]]; then
            echo "Unexpected number of lines in dataset.csv"
            cat /tmp/dataset.csv
            exit 1
          fi


